---
- name: Ensure that packages are installed
  apt:
    name: "{{ item }}"
    state: present
  with_items:
    - build-essential
    - git
    - xmlsec1
    - python2.7
    - python-dev
    - python-setuptools
    - python-pip

- name: install python virtualenv
  pip:
    name: virtualenv
    executable: pip

- name: create pyFF user
  user: name=pyff shell="/bin/false" state=present

- name: Create project directory
  file: path={{ pyff_project_dir }} state=directory mode=0755 owner=pyff

- block:
    - name: fetch pyFF from {{ pyff_repo_url }}, version {{ pyff_repo_version }}
      git:
        repo: "{{ pyff_repo_url }}"
        dest: "{{ pyff_src_dir }}"
        version: "{{ pyff_repo_version }}"
        accept_hostkey: "yes"
        force: "yes"
      register: fetch_pyff

    - name: install pyFF from {{ pyff_src_dir }} to {{ pyff_env_dir }}
      pip:
        name: "{{ pyff_src_dir }}"
        virtualenv: "{{ pyff_env_dir }}"
        virtualenv_python: python2
        state: latest
        #executable: pip2
      when: fetch_pyff.changed

    - name: Create pyFF mdq configuration
      template: src=mdq.fd.j2
                dest="{{ pyff_env_dir }}/mdq.fd"
      become_method: sudo

    - name: Create pyFF systemd service
      template: src=pyff.service.j2
                dest="{{ pyff_env_dir }}/pyff.service"

    - name: Create local metadata directory
      file: path={{ pyff_env_dir }}/metadata state=directory mode=0755 owner=pyff

    - name: Create certs directory
      file: path="{{ pyff_env_dir }}/certs" state=directory mode=0755

    - name: create self-signed Metadata Signing SSL certs
      shell: >
        openssl genrsa -out "{{ pyff_env_dir }}/certs/{{ item }}.key" 2048;
        openssl req -new -nodes -x509 -subj "/C=NL/CN={{ item }}"
        -days 3650 -key "{{ pyff_env_dir }}/certs/{{ item }}.key"
        -out "{{ pyff_env_dir }}/certs/{{ item }}.crt" -extensions v3_ca
      args:
        creates: "{{ pyff_env_dir }}/certs/{{ item }}.crt"
      with_items:
        - signing

  become: "yes"
  become_user: pyff

- name: Copy to pyff.service in /etc/systemd/system
  # systemd/ctl can not enable symlinked services :(
  # https://github.com/systemd/systemd/issues/3010
  #- name: Create symlink to pyff.service in /etc/systemd/system
  #  file: src="{{ pyff_env_dir }}/pyff.service" dest=/etc/systemd/system/pyff.service state=link
  copy:
    src: "{{ pyff_env_dir }}/pyff.service"
    dest: /etc/systemd/system/pyff.service
    remote_src: yes

# stupid pyff want to create files in /var/run, even if it isn't run as root
# now fixed by a pre-exec command in the service file, instead
#- name: Create pyff-owned pyff.pid file
#  file: path=/var/run/pyff.pid state=touch owner=pyff

- name: Install filebeat configuration
  template:
    src: fb_pyffd.yml.j2
    dest: /etc/filebeat/conf.d/fb_pyffd.yml
  notify: "restart filebeat"

- name: Copy rsyslog config
  copy: >
    src=rsyslog_pyffd.conf
    dest=/etc/rsyslog.d/pyffd.conf
  notify: "restart rsyslog"

- name: Copy logrotate config
  copy: >
    src=logrotate_pyffd
    dest=/etc/logrotate.d/pyffd

- name: restart pyff
  systemd: daemon_reload=yes name=pyff state=restarted enabled=yes

- name: set up nxginx proxy
  include: nginx.yml

# nginx needs to be restarted _now_ rather than at the end of the play
- name: flush handlers
  meta: flush_handlers

