---
- name: Ensure that packages are installed
  apt:
    name:
      - apache2
      - libapache2-mod-php7.0
      - php-date
      - php-mcrypt
      - php-json
      - php-simplexml
      - php-mbstring
      - php-curl
      - php-gmp
      - php-sqlite3
      - php-zip
    state: present

- name: get composer installer
  get_url:
    url: "{{ composer_installer }}"
    dest: /tmp/composer-installer
    checksum: "{{ composer_installer_checksum }}"

- name: install composer
  command: "php -f /tmp/composer-installer -- --install-dir=/usr/local/bin --filename=composer"

- name: Remove default index files
  file: dest=/var/www/html/{{ item }} state=absent
  with_items:
    - index.html
    - index.nginx-debian.html

- name: Remove default website
  file: dest=/etc/apache2/sites-enabled/{{item}} state=absent
  with_items:
    - "default.conf"
    - "00-default.conf"
    - "000-default.conf"
  notify: restart Apache

- name: Add websites
  template:
    src: "{{ item }}.conf.j2"
    dest: "/etc/apache2/sites-available/{{ item }}.conf"
    mode: 0644
  with_items:
    - idp
  notify: restart Apache

- name: Enable websites
  file:
    src: "/etc/apache2/sites-available/{{ item }}.conf"
    dest: "/etc/apache2/sites-enabled/00-{{ item }}.conf"
    state: link
  with_items:
    - idp
  notify: restart Apache

- name: Listen to IdP port
  blockinfile:
    path: "/etc/apache2/ports.conf"
    insertbefore: BOF
    marker: "# {mark} ANSIBLE MANAGED BLOCK {{ hostnames.idp }}"
    create: yes
    block: |
      Listen {{ idp_test_port }}
  notify: restart Apache

- name: Create simplesaml project dir
  file:
    path: "{{ simplesaml_project_dir }}"
    state: directory
    mode: 0755
    owner: www-data
    group: www-data

# todo: add checksum
- name: Download SimpleSamlPHP
  get_url:
    url: "{{ simplesaml_download_url }}/v{{ simplesaml_version }}/\
          simplesamlphp-{{ simplesaml_version }}.tar.gz"
    dest: "{{ simplesaml_project_dir }}/simplesamlphp-{{ simplesaml_version }}.tar.gz"
  register: ssp_download

- name: Check SimpleSamlPHP dest dir
  stat: "path={{ simplesaml_project_dir }}/simplesamlphp-{{ simplesaml_version }}"
  register: ssp_destdir

- name: Unpack SimpleSamlPHP
  unarchive:
    src: "{{ simplesaml_project_dir }}/simplesamlphp-{{ simplesaml_version }}.tar.gz"
    dest: "{{ simplesaml_project_dir }}"
    remote_src: true
  when: ssp_download.changed or not ssp_destdir.stat.exists

- name: Link simplesaml
  file:
    src: "{{ simplesaml_project_dir }}/simplesamlphp-{{ simplesaml_version }}"
    dest: "{{ simplesaml_project_dir }}/simplesaml"
    state: link

- name: SimpleSaml permissions
  file:
    path: "{{item}}"
    group: "www-data"
    mode: 0775
  with_items:
    - "{{simplesaml_project_dir}}/simplesaml/log"

- name: SimpleSaml configuration
  template:
    src: config.php.j2
    dest: "{{ simplesaml_project_dir }}/simplesaml/config/config.php"

- name: SimpleSaml test authsources
  template:
    src: authsources.php.j2
    dest: "{{ simplesaml_project_dir }}/simplesaml/config/authsources.php"

- name: SimpleSaml enable authcrypt
  file:
    dest: "{{ simplesaml_project_dir }}/simplesaml/modules/authcrypt/enable"
    state: touch

- name: SimpleSaml {{ environment_string }} metadata
  template:
    src: "{{ item }}.j2"
    dest: "{{ simplesaml_project_dir }}/simplesaml/metadata/{{ item }}"
  with_items:
    - saml20-idp-hosted.php

# before, we used to generate a certificate dynamically, but that was
# annoying, because then we would need to exchange the metadata over https
# in some way, which leads to chicken-and-egg problems.
- name: Copy self-signed Token signing cert key
  copy:
    content: "{{client_saml_cert.priv}}"
    dest: "{{ simplesaml_project_dir }}/simplesaml/cert/server.pem"
    group: "www-data"
    mode: 0640

- name: Copy self-signed Token signing cert
  copy:
    content: "{{client_saml_cert.pub}}"
    dest: "{{ simplesaml_project_dir }}/simplesaml/cert/server.crt"

