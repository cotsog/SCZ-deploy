---
# playbook to install and configure general components of the LDAP
- include_vars: "ldap.yml"

- name: Install LDAP utils
  apt:
    state: present
    name:
      - ldap-utils
      - python-ldap

- name: Install LDAP
  apt: state=present name=slapd
  notify: restart LDAP

- name: Copying alternative service script
  become: true
  copy:
    src: slapd.service
    dest: /etc/systemd/system
  notify:
    - systemd daemon-reload
    - restart LDAP
  when: ansible_virtualization_type == "docker"

- name: Ensure that a number of directories exist
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ ldap_user }}"
    group: "{{ ldap_group }}"
    mode: 0755
  tags: ldap
  with_items:
    - "{{ ldap_bin_dir }}"
    - "{{ ldap_schema_dir }}"
    - /var/run/slapd

- name: Remove old ldap schema files
  file:
    path: "{{item}}"
    state: absent
  with_items:
    - "{{ ldap_schema_dir }}/eduMember.ldif"
    - "{{ ldap_schema_dir }}/eduMember.schema"
    - "{{ ldap_schema_dir }}/openLdapEduperson-201602DV.ldif"
    - "{{ ldap_schema_dir }}/openssh-lpk-openldap.ldif"
    - "{{ ldap_schema_dir }}/openssh-lpk-openldap.schema"
    - "/etc/ldap/downloads/2xOpenLdapEduPerson-201602.zip"
    - "/etc/ldap/downloads"

- name: Copy schema2ldif
  become_user: "{{ ldap_user }}"
  copy:
    src: roles/ldap/files/schema2ldif
    dest: "{{ ldap_bin_dir }}"
    mode: 0755

- name: Generate ldif from template
  become_user: "{{ ldap_user }}"
  become: true
  template:
    src: "{{ item.src }}"
    dest: "{{ ldap_schema_dir }}/{{ item.dest }}"
    mode: 0644
  with_items:
    - { src: "initial_setup.ldif.j2", dest: "initial_setup.ldif" }
    - { src: "enable_syncprov.ldif.j2", dest: "enable_syncprov.ldif" }

- name: Set database suffix
  ldap_attr:
    dn: "olcDatabase={1}mdb,cn=config"
    name: "olcSuffix"
    values: "{{ ldap.basedn }}"

- name: Set ldap admin user
  ldap_attr:
    dn: "olcDatabase={1}mdb,cn=config"
    name: "olcRootDN"
    values: "{{ ldap.binddn }}"

- name: Set ldap admin password
  ldap_attr:
    dn: "olcDatabase={1}mdb,cn=config"
    name: "olcRootPW"
    values: "{{ ldap_password | slapd_hash }}"
    state: exact


- name: Set loglevel to stats
  #command: ldapmodify -Q -Y EXTERNAL -H ldapi:/// -f "{{ ldap_schema_dir }}/set_loglevel_stats.ldif"
  ldap_attr:
    dn: "cn=config"
    name: "olcLogLevel"
    values: "stats"

- name: Enable synchronization
  command: ldapmodify -Q -Y EXTERNAL -H ldapi:/// -f "{{ ldap_schema_dir }}/enable_syncprov.ldif"
  register: ldap_sync_enable
  # return code 20 means entry already exists
  failed_when: "ldap_sync_enable.rc!=0 and ldap_sync_enable.rc!=20"
  changed_when: "ldap_sync_enable.rc!=20"

- name: Copy ldap schemas
  copy:
    src: "schema-{{ item }}.ldif"
    dest: "{{ ldap_schema_dir }}"
    owner: "{{ ldap_user }}"
    group: "{{ ldap_user }}"
  with_items: "{{ ldap_schemas }}"

# OpenLDAP does not like adding existing entries again, so first check which schemas
# have been defined
- name: Check for defined ldap schemas
  command: >
    ldapsearch -Q -LLL -Y EXTERNAL -H ldapi:/// -b 'cn=schema,cn=config' '(cn=*)' dn
  register: ldap_schemas_present
  changed_when: false

# Add schemas to ldap
- name: Add schemas to ldap
  command: >
    ldapadd -Q -Y EXTERNAL -H ldapi:///
    -f {{ ldap_schema_dir }}/schema-{{ item }}.ldif
    -D "cn=config" -w "{{ ldap_password }}"
  when: item not in ldap_schemas_present.stdout
  with_items: "{{ ldap_schemas }}"

- name: Initialize DIT
  command: >
    ldapadd -c -x -D "{{ ldap.binddn }}" -w "{{ ldap_password }}"
    -f "{{ ldap_schema_dir }}/initial_setup.ldif"
  register: result
  failed_when: "result.rc not in [0, 68]"
  changed_when: "result.rc != 68"

- name: Redirect slapd log to /var/log/slapd.log
  copy:
    src: rsyslog_slapd.conf
    dest: /etc/rsyslog.d/slapd.conf
  notify: restart rsyslog

- name: Install filebeat configuration
  template:
    src: fb_slapd.yml.j2
    dest: /etc/filebeat/conf.d/fb_slap.yml
  notify: restart filebeat

- name: Install backup script
  template:
    src: ldap-backup.sh.j2
    dest: "{{backup_runparts}}/ldap-backup.sh"
    mode: 0755

