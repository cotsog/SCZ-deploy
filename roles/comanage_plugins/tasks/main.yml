---
- include_vars: comanage_plugins.yml

- name: ensure that packages are installed
  apt:
    name: "{{ item }}"
    state: present
  with_items: "{{ packages  }}"
  become: Yes

- name: Activate Service Token Plugin
  file:
    src: "{{ comanage_path }}/app/AvailablePlugin/CoServiceToken"
    dest: "{{ comanage_path }}/local/Plugin/CoServiceToken"
    state: link
  become: Yes

- name: Activate LDAP Service Token Plugin
  file:
    src: "{{ comanage_path }}/app/AvailablePlugin/LdapServiceTokenProvisioner"
    dest: "{{ comanage_path }}/local/Plugin/LdapServiceTokenProvisioner"
    state: link
  become: Yes

- name: Activate Email Uid Enroller Plugin
  file:
    src: "{{ comanage_path }}/app/AvailablePlugin/EmailUidEnroller"
    dest: "{{ comanage_path }}/local/Plugin/EmailUidEnroller"
    state: link
  become: Yes

- name: Checkout the relevant Git based plugins
  git:
    repo: "{{ item.src }}"
    dest: "{{ comanage_path }}/local/Plugin/{{ item.name }}"
    version: "{{ item.version }}"
  with_items: "{{ comanage_git_plugins }}"
  become: yes

- name: Install configurations
  template:
    src: "{{ item.src }}"
    dest: "{{ comanage_path }}/app/Config/{{ item.dest }}"
  with_items: "{{ comanage_plugin_configurations }}"
  become: yes


- name: Set Database configuration for external Proxy database
  blockinfile:
    path: "{{ comanage_path }}/local/Config/database.php"
    follow: yes
    insertafter: "class DATABASE_CONFIG {$"
    block: |
      public $scz = array(
      'datasource' => 'Database/Mysql',
      'persistent' => false,
      'host' => '{{ comanage_proxy_db }}',
      'login' => '{{ comanage_proxy_db_user }}',
      'password' => '{{ comanage_proxy_db_password }}',
      'database' => '{{ comanage_proxy_db_name }}',
      'prefix' => '',
      );

- name: Clearing Cake cache
  command: ./Console/cake cache
  become: true
  become_user: "{{ comanage_www_user }}"
  args:
    chdir: "{{ comanage_path }}/app"

- name: Setup Plugin schemata
  command: ./Console/cake database
  become: true
  become_user: "{{ comanage_www_user }}"
  args:
    chdir: "{{ comanage_path }}/app"

- name: Configure JsonLog for ZoneProvisioner
  blockinfile:
    path: "{{ comanage_path }}/local/Config/bootstrap.php"
    create: yes
    follow: yes
    marker: "// {mark} ANSIBLE MANAGED BLOCK"
    block: |
      CakeLog::config('json', array(
        'engine' => 'ZoneProvisioner.JsonLog',
        'types' => array('json_err','json_not'),
        'path' => '{{ comanage_path }}/local/tmp/logs',
      ));

- name: Remove file in incorrect location
  file:
    path: "{{ comanage_path }}/app/local"
    state: absent
