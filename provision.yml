# vim:ts=2:sw=2:expandtab
---
- hosts: all
  serial: 20
  tasks:
    - name: Read vars from secrets file
      include_vars: "{{ item }}"
      with_items: "{{ secrets_files }}"
      tags: always

# first gather facts from all hosts that we're actually deploying to
- hosts: all
  become: yes
  serial: 20
  gather_facts: true

# Then gather facts from all other hosts, but one by one
# looks hackish, but this is apparently the "a clean, official way" to gather
# required facts from all hosts, regardless of the commandline --limit
# parameter
# We need this here, because in the group vars, we rely on the hostvars for
# the ip addresses of other hosts (e.g, mgnt1)
- hosts: all
  serial: 2
  pre_tasks:
    - name: Gather facts from mgnt hosts (regardless of limit or tags)
      setup:
      delegate_to: "{{ item }}"
      delegate_facts: "true"
      when: hostvars[item]['ansible_default_ipv4'] is not defined
      with_items: "{{ groups['all'] }}"
      tags: always

# to run the debug target, specify --extra-vars="debug=true" / -e debug=1
- hosts: all
  roles:
    - role: debug
      tags: ['debug']
      when: "debug | default('false') | bool"

- hosts: all
  serial: 20
  roles:
    - { role: basic,         tags: ['common']            }
    - { role: apt,           tags: ['common','apt']      }
    - { role: firewall,      tags: ['common','firewall'] }
    - { role: ntp,           tags: ['common']            }
    - { role: users,         tags: ['common','users']    }
    - { role: mail,          tags: ['common','mail']     }
    - { role: syslog-client, tags: ['common','syslog']   }
    - { role: backups,       tags: ['common','backups']  }

- hosts: mgnt1
  roles:
  #  - { role: ldap, tags: ['ldap'] }
  #  - { role: mta,  tags: ['mta' ] }

- hosts: mgnt2
  roles:
    - { role: syslog-server,   tags: ['syslog'] }

- hosts:
    - lb
    - sandbox
  roles:
    - role: http_nginx
      tags: ['tls','http_nginx']
    - role: tls_letsencrypt
      tags: ['tls','tls_letsencrypt']
      when: enable_https and not use_fixed_cert
    - role: tls_fixed_cert
      tags: ['tls','tls_fixedcert']
      when: enable_https and use_fixed_cert

- hosts: lb
  roles:
    - { role: https_haproxy,   tags: ['lb','haproxy'] }

- hosts: ldap
  roles:
    - { role: ldap, tags: ['ldap'] }
    - { role: ldap_clients, tags: ['ldap', 'ldap_clients'] }
#    - { role: pam_websso_daemon,  tags: ['client','websso-daemon'] }

- hosts:
    - proxy
    - comanage
  roles:
    - { role: mysql, tags: ['mysql'] }

- hosts: client
  roles:
    - { role: client-base,          tags: ['client','client-base'  ] }
    - { role: client-saml-sp,       tags: ['client','client-sp'    ] }
    - { role: client-saml-idp,      tags: ['client','client-idp'   ] }
    - { role: client-google-idp,    tags: ['client','client-google'] }
    - { role: client-orcid-idp,     tags: ['client','client-orcid' ] }
    - { role: client-microsoft-idp, tags: ['client','client-ms'    ] }
    - { role: client-oidc-rp,       tags: ['client','client-rp'    ] }

- hosts: proxy
  roles:
    - { role: pyff,          tags: ['proxy','pyff'      ] }
    - { role: satosa,        tags: ['proxy','satosa'    ] }
    - { role: cmservice,     tags: ['proxy','cmservice' ] }
    - { role: proxy_mysql,   tags: ['proxy','mysql'     ] }

- hosts: comanage
  roles:
    - { role: http_apache,      tags: ['comanage', 'web'] }
    - { role: comanage_mysql,   tags: ['comanage', 'db' ] }
    - { role: php56,            tags: ['comanage', 'web'] }
    - { role: auth_mellon,      tags: ['comanage', 'web'] }
    - { role: comanage,         tags: ['comanage', 'web'] }
    - { role: comanage_idp,     tags: ['comanage', 'web'] }
    - { role: comanage_enable,  tags: ['comanage', 'web'] }
    - { role: comanage_plugins, tags: ['comanage', 'web'] }

- hosts: meta
  roles:
    - { role: http_dummy,  tags: ['meta','http']     }
    - { role: metadata,    tags: ['meta','metadata'] }

- hosts: vm-sandbox
  roles:
    - { role: pam_websso,         tags: ['client','pam-websso'   ] }

- hosts: sandbox
  roles:
    - { role: wordpress,   tags: ['sandbox','wordpress' ] }
